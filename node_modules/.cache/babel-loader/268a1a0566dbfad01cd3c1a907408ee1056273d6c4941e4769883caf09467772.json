{"ast":null,"code":"var _jsxFileName = \"/Users/nitro/Desktop/Food order demo App/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [httpError, sehttpError] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://my-second-project-47d93-default-rtdb.firebaseio.com/meals.json');\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          description: responseData[key].description,\n          name: responseData[key].name,\n          price: responseData[key].price\n        });\n      }\n      ;\n      setMeals(loadedMeals);\n      setLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setLoading(false);\n      sehttpError(error.message);\n    });\n  }, []);\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.httperror,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  const mealsList = meals.map(meal => {\n    return /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      description: meal.description,\n      price: meal.price\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.mealsLoading,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableMeals, \"8r6z2AvG/iPlBgqWQLEREhCdjI0=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useEffect","useState","classes","Card","MealItem","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","loading","setLoading","httpError","sehttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","description","name","price","catch","error","message","className","httperror","children","fileName","_jsxFileName","lineNumber","columnNumber","mealsList","map","meal","mealsLoading","_c","$RefreshReg$"],"sources":["/Users/nitro/Desktop/Food order demo App/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\n\nconst AvailableMeals = () => {\n    const [meals, setMeals] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [httpError, sehttpError] = useState(true)\n\n    useEffect(()=>{\n      const fetchMeals = async () => {\n          const response = await fetch('https://my-second-project-47d93-default-rtdb.firebaseio.com/meals.json');\n          if(!response.ok){\n              throw new Error(\"Something went wrong!\");\n          }\n          const responseData = await response.json();\n\n          const loadedMeals = [];\n\n          for (const key in responseData){\n              loadedMeals.push({\n                  id:key,\n                  description:responseData[key].description,\n                  name: responseData[key].name,\n                  price: responseData[key].price\n              });\n          };\n          setMeals(loadedMeals)\n          setLoading(false)\n      }\n\n          fetchMeals().catch((error)=>{\n            setLoading(false);\n            sehttpError(error.message)\n        });\n\n      }, [])\n\n    if(httpError){\n        return <section className={classes.httperror}>\n            <p>{httpError}</p>\n        </section>\n    }\n    const mealsList = meals.map((meal) => {\n        return(\n            <MealItem\n                key={meal.id}\n                id={meal.id}\n                name={meal.name}\n                description={meal.description}\n                price={meal.price} />\n        )\n\n    })\n\n    return (\n        <section className={classes.meals}>\n            <Card>\n                {loading && <p className={classes.mealsLoading}>Loading...</p>}\n                <ul>\n                {mealsList}\n                 </ul>\n            </Card>\n        </section>\n    );\n};\n\nexport default AvailableMeals;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}